// Generated by CoffeeScript 1.6.2
(function() {
  var assignFirstMove, assignPlayerTokens, assignPlayers, board, checkTurn, createNewBoard, firstPlayer, firstPlayerToken, game, gameResults, getGameMode, getLocation, mode, playerMove, resetBoard, secondPlayer, secondPlayerToken, setPieces, startGame, startNewGame, startingPlayer;

  mode = firstPlayerToken = secondPlayerToken = startingPlayer = firstPlayer = secondPlayer = board = game = void 0;

  startGame = function() {
    resetBoard();
    getGameMode();
    assignPlayerTokens();
    createNewBoard();
    assignPlayers();
    assignFirstMove();
    return startNewGame();
  };

  getGameMode = function() {
    return mode = $("#gameMode").val();
  };

  assignPlayerTokens = function() {
    firstPlayerToken = $('#playerPiece').val() === "X" ? "X" : "O";
    return secondPlayerToken = $('#playerPiece').val() === "X" ? "O" : "X";
  };

  createNewBoard = function() {
    return board = new Board(firstPlayerToken, secondPlayerToken);
  };

  assignPlayers = function() {
    firstPlayer = new Player("firstPlayer");
    return secondPlayer = mode === "twoPlayer" ? new Player("secondPlayer") : new Computer(board);
  };

  assignFirstMove = function() {
    var firstMove;

    firstMove = $("#firstMove").val();
    return startingPlayer = firstMove === "player" ? firstPlayer : secondPlayer;
  };

  startNewGame = function() {
    return game = new Game(firstPlayer, secondPlayer, board, startingPlayer);
  };

  resetBoard = function() {
    var space, _i, _results;

    _results = [];
    for (space = _i = 0; _i <= 8; space = ++_i) {
      $("div#space" + space).removeClass('cross');
      _results.push($("div#space" + space).removeClass('circle'));
    }
    return _results;
  };

  playerMove = function(space) {
    if (!game.gameOver) {
      game.playerMove(space);
      setPieces();
      return gameResults();
    }
  };

  gameResults = function() {
    game.checkGameOver();
    if (game.gameOver) {
      return alert("" + game.winner + " wins!");
    }
  };

  checkTurn = function() {
    if (game.turn === secondPlayer && mode === "singlePlayer") {
      return playerMove(secondPlayer.findBestMove());
    }
  };

  setPieces = function() {
    var count, space, _i, _len, _ref, _results;

    count = 0;
    _ref = board.spaces;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      space = _ref[_i];
      if (space === "X") {
        $("div#space" + count).addClass('cross');
      }
      if (space === "O") {
        $("div#space" + count).addClass('circle');
      }
      _results.push(count++);
    }
    return _results;
  };

  getLocation = function(that) {
    var location;

    return location = that.id.slice(-1);
  };

  $(function() {
    $('#newGame').on("click", function(event) {
      startGame();
      return checkTurn();
    });
    return $('.boardPiece').on("click", function(event) {
      playerMove(getLocation(this));
      return checkTurn();
    });
  });

}).call(this);
